/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useEffect, useRef, useState } from 'react';
import * as THREE from 'three'

export default function Scene({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/models/scene.gltf')


  const [video] = useState(() =>
    Object.assign(document.createElement('video'), { src: '/spacestar.mp4', height: '1000px', width: '1400px', crossOrigin: 'Anonymous', loop: true })
  )

  video.autoplay = false;
  video.muted = true;
  video.playsInline = false;


  useEffect(() => {
    props.mute ? video.pause() : video.play()
  }, [video, props.mute])
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={props.position} rotation={[0, 0.03, 0]} scale={0.54}>
        <mesh geometry={nodes.Cubo046.geometry} material={materials.tv} />
        {/* <mesh
          castShadow
          receiveShadow
          scale={[1, 1, 1]}
          geometry={nodes.Cubo046_1.geometry}>
          <meshPhysicalMaterial clearcoat={1} clearcoatRoughness={0} toneMapped={false}>
            <videoTexture
              attach="map" args={[video]}
              repeat={[3, 4.8]}
              // repeat={[3.4, 5.2]}
              // scale={[0.1, 0.1, 0.1]}
              offset={[0.36, 0.8]}
              format={THREE.RGBAFormat}
              type={THREE.UnsignedByteType}
              flipY={false}
              wrapT={THREE.RepeatWrapping}
              wrapS={THREE.RepeatWrapping}
              encoding={THREE.sRGBEncoding}
            />
          </meshPhysicalMaterial>
        </mesh> */}

        <mesh geometry={nodes.Cubo046_2.geometry} material={materials.Plastico} />
        <mesh geometry={nodes.Cubo046_3.geometry} material={materials.Metal} />
        <mesh geometry={nodes.Cubo046_4.geometry} material={materials['Materiais.001']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/scene.gltf')
